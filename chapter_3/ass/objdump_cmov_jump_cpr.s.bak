
./obj/cmov_jump_cpr.o：     文件格式 elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp    			/* save old %rbp */
   1:	48 89 e5             	mov    %rsp,%rbp		/* set main pointer */
   4:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)  /* a = 0 */
   b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)  /* b = 0 */
  12:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)  /* compare a 0 */
  16:	75 0b                	jne    23 <main+0x23>   /* if (a != 0) goto 23 */
  18:	8b 45 f8             	mov    -0x8(%rbp),%eax  /* %eax = a */
  1b:	83 c0 01             	add    $0x1,%eax        /* %eax = %eax + 1 */
  1e:	89 45 fc             	mov    %eax,-0x4(%rbp)  /* a = %eax */
  21:	eb 09                	jmp    2c <main+0x2c>   /* goto 2c */
  23:	8b 45 f8             	mov    -0x8(%rbp),%eax  /* %eax = a */
  26:	83 e8 01             	sub    $0x1,%eax        /* %eax = %eax - 1 */
  29:	89 45 fc             	mov    %eax,-0x4(%rbp)  /* b = %eax */
  2c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)  /* a = 0 */
  33:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)  /* b = 0 */
  3a:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)  /* compare a 0 */
  3e:	75 08                	jne    48 <main+0x48>   /* if (a != 0) goto 48 */
  40:	8b 45 f8             	mov    -0x8(%rbp),%eax  /* %eax = a */
  43:	83 c0 01             	add    $0x1,%eax        /* %eax = %eax + 1 */
  46:	eb 06                	jmp    4e <main+0x4e>   /* goto 4e */
  48:	8b 45 f8             	mov    -0x8(%rbp),%eax  /* %eax = a */
  4b:	83 e8 01             	sub    $0x1,%eax        /* %eax = %eax - 1 */
  4e:	89 45 fc             	mov    %eax,-0x4(%rbp)  /* b = %eax */
  51:	8b 45 fc             	mov    -0x4(%rbp),%eax  /* %eax = b */
  54:	5d                   	pop    %rbp             /* restore %rbp */
  55:	c3                   	retq                    /* return %eax */
