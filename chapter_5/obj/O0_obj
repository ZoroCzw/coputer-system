
bin/combine_O0：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000000698 <_init>:
 698:	48 83 ec 08          	sub    $0x8,%rsp
 69c:	48 8b 05 45 19 20 00 	mov    0x201945(%rip),%rax        # 201fe8 <__gmon_start__>
 6a3:	48 85 c0             	test   %rax,%rax
 6a6:	74 02                	je     6aa <_init+0x12>
 6a8:	ff d0                	callq  *%rax
 6aa:	48 83 c4 08          	add    $0x8,%rsp
 6ae:	c3                   	retq   

Disassembly of section .plt:

00000000000006b0 <.plt>:
 6b0:	ff 35 d2 18 20 00    	pushq  0x2018d2(%rip)        # 201f88 <_GLOBAL_OFFSET_TABLE_+0x8>
 6b6:	ff 25 d4 18 20 00    	jmpq   *0x2018d4(%rip)        # 201f90 <_GLOBAL_OFFSET_TABLE_+0x10>
 6bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000006c0 <free@plt>:
 6c0:	ff 25 d2 18 20 00    	jmpq   *0x2018d2(%rip)        # 201f98 <free@GLIBC_2.2.5>
 6c6:	68 00 00 00 00       	pushq  $0x0
 6cb:	e9 e0 ff ff ff       	jmpq   6b0 <.plt>

00000000000006d0 <puts@plt>:
 6d0:	ff 25 ca 18 20 00    	jmpq   *0x2018ca(%rip)        # 201fa0 <puts@GLIBC_2.2.5>
 6d6:	68 01 00 00 00       	pushq  $0x1
 6db:	e9 d0 ff ff ff       	jmpq   6b0 <.plt>

00000000000006e0 <clock@plt>:
 6e0:	ff 25 c2 18 20 00    	jmpq   *0x2018c2(%rip)        # 201fa8 <clock@GLIBC_2.2.5>
 6e6:	68 02 00 00 00       	pushq  $0x2
 6eb:	e9 c0 ff ff ff       	jmpq   6b0 <.plt>

00000000000006f0 <__stack_chk_fail@plt>:
 6f0:	ff 25 ba 18 20 00    	jmpq   *0x2018ba(%rip)        # 201fb0 <__stack_chk_fail@GLIBC_2.4>
 6f6:	68 03 00 00 00       	pushq  $0x3
 6fb:	e9 b0 ff ff ff       	jmpq   6b0 <.plt>

0000000000000700 <printf@plt>:
 700:	ff 25 b2 18 20 00    	jmpq   *0x2018b2(%rip)        # 201fb8 <printf@GLIBC_2.2.5>
 706:	68 04 00 00 00       	pushq  $0x4
 70b:	e9 a0 ff ff ff       	jmpq   6b0 <.plt>

0000000000000710 <calloc@plt>:
 710:	ff 25 aa 18 20 00    	jmpq   *0x2018aa(%rip)        # 201fc0 <calloc@GLIBC_2.2.5>
 716:	68 05 00 00 00       	pushq  $0x5
 71b:	e9 90 ff ff ff       	jmpq   6b0 <.plt>

0000000000000720 <malloc@plt>:
 720:	ff 25 a2 18 20 00    	jmpq   *0x2018a2(%rip)        # 201fc8 <malloc@GLIBC_2.2.5>
 726:	68 06 00 00 00       	pushq  $0x6
 72b:	e9 80 ff ff ff       	jmpq   6b0 <.plt>

0000000000000730 <atoi@plt>:
 730:	ff 25 9a 18 20 00    	jmpq   *0x20189a(%rip)        # 201fd0 <atoi@GLIBC_2.2.5>
 736:	68 07 00 00 00       	pushq  $0x7
 73b:	e9 70 ff ff ff       	jmpq   6b0 <.plt>

Disassembly of section .plt.got:

0000000000000740 <__cxa_finalize@plt>:
 740:	ff 25 b2 18 20 00    	jmpq   *0x2018b2(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 746:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000750 <_start>:
     750:	31 ed                	xor    %ebp,%ebp
     752:	49 89 d1             	mov    %rdx,%r9
     755:	5e                   	pop    %rsi
     756:	48 89 e2             	mov    %rsp,%rdx
     759:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     75d:	50                   	push   %rax
     75e:	54                   	push   %rsp
     75f:	4c 8d 05 4a 0b 00 00 	lea    0xb4a(%rip),%r8        # 12b0 <__libc_csu_fini>
     766:	48 8d 0d d3 0a 00 00 	lea    0xad3(%rip),%rcx        # 1240 <__libc_csu_init>
     76d:	48 8d 3d 39 07 00 00 	lea    0x739(%rip),%rdi        # ead <main>
     774:	ff 15 66 18 20 00    	callq  *0x201866(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
     77a:	f4                   	hlt    
     77b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000780 <deregister_tm_clones>:
     780:	48 8d 3d 89 18 20 00 	lea    0x201889(%rip),%rdi        # 202010 <__TMC_END__>
     787:	55                   	push   %rbp
     788:	48 8d 05 81 18 20 00 	lea    0x201881(%rip),%rax        # 202010 <__TMC_END__>
     78f:	48 39 f8             	cmp    %rdi,%rax
     792:	48 89 e5             	mov    %rsp,%rbp
     795:	74 19                	je     7b0 <deregister_tm_clones+0x30>
     797:	48 8b 05 3a 18 20 00 	mov    0x20183a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
     79e:	48 85 c0             	test   %rax,%rax
     7a1:	74 0d                	je     7b0 <deregister_tm_clones+0x30>
     7a3:	5d                   	pop    %rbp
     7a4:	ff e0                	jmpq   *%rax
     7a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     7ad:	00 00 00 
     7b0:	5d                   	pop    %rbp
     7b1:	c3                   	retq   
     7b2:	0f 1f 40 00          	nopl   0x0(%rax)
     7b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     7bd:	00 00 00 

00000000000007c0 <register_tm_clones>:
     7c0:	48 8d 3d 49 18 20 00 	lea    0x201849(%rip),%rdi        # 202010 <__TMC_END__>
     7c7:	48 8d 35 42 18 20 00 	lea    0x201842(%rip),%rsi        # 202010 <__TMC_END__>
     7ce:	55                   	push   %rbp
     7cf:	48 29 fe             	sub    %rdi,%rsi
     7d2:	48 89 e5             	mov    %rsp,%rbp
     7d5:	48 c1 fe 03          	sar    $0x3,%rsi
     7d9:	48 89 f0             	mov    %rsi,%rax
     7dc:	48 c1 e8 3f          	shr    $0x3f,%rax
     7e0:	48 01 c6             	add    %rax,%rsi
     7e3:	48 d1 fe             	sar    %rsi
     7e6:	74 18                	je     800 <register_tm_clones+0x40>
     7e8:	48 8b 05 01 18 20 00 	mov    0x201801(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
     7ef:	48 85 c0             	test   %rax,%rax
     7f2:	74 0c                	je     800 <register_tm_clones+0x40>
     7f4:	5d                   	pop    %rbp
     7f5:	ff e0                	jmpq   *%rax
     7f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     7fe:	00 00 
     800:	5d                   	pop    %rbp
     801:	c3                   	retq   
     802:	0f 1f 40 00          	nopl   0x0(%rax)
     806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     80d:	00 00 00 

0000000000000810 <__do_global_dtors_aux>:
     810:	80 3d f9 17 20 00 00 	cmpb   $0x0,0x2017f9(%rip)        # 202010 <__TMC_END__>
     817:	75 2f                	jne    848 <__do_global_dtors_aux+0x38>
     819:	48 83 3d d7 17 20 00 	cmpq   $0x0,0x2017d7(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
     820:	00 
     821:	55                   	push   %rbp
     822:	48 89 e5             	mov    %rsp,%rbp
     825:	74 0c                	je     833 <__do_global_dtors_aux+0x23>
     827:	48 8b 3d da 17 20 00 	mov    0x2017da(%rip),%rdi        # 202008 <__dso_handle>
     82e:	e8 0d ff ff ff       	callq  740 <__cxa_finalize@plt>
     833:	e8 48 ff ff ff       	callq  780 <deregister_tm_clones>
     838:	c6 05 d1 17 20 00 01 	movb   $0x1,0x2017d1(%rip)        # 202010 <__TMC_END__>
     83f:	5d                   	pop    %rbp
     840:	c3                   	retq   
     841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     848:	f3 c3                	repz retq 
     84a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000850 <frame_dummy>:
     850:	55                   	push   %rbp
     851:	48 89 e5             	mov    %rsp,%rbp
     854:	5d                   	pop    %rbp
     855:	e9 66 ff ff ff       	jmpq   7c0 <register_tm_clones>

000000000000085a <new_vec>:
     85a:	55                   	push   %rbp
     85b:	48 89 e5             	mov    %rsp,%rbp
     85e:	48 83 ec 20          	sub    $0x20,%rsp
     862:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     866:	bf 10 00 00 00       	mov    $0x10,%edi
     86b:	e8 b0 fe ff ff       	callq  720 <malloc@plt>
     870:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     874:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     87b:	00 
     87c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
     881:	75 07                	jne    88a <new_vec+0x30>
     883:	b8 00 00 00 00       	mov    $0x0,%eax
     888:	eb 51                	jmp    8db <new_vec+0x81>
     88a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     88e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     892:	48 89 10             	mov    %rdx,(%rax)
     895:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
     89a:	7e 2f                	jle    8cb <new_vec+0x71>
     89c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     8a0:	be 08 00 00 00       	mov    $0x8,%esi
     8a5:	48 89 c7             	mov    %rax,%rdi
     8a8:	e8 63 fe ff ff       	callq  710 <calloc@plt>
     8ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     8b1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
     8b6:	75 13                	jne    8cb <new_vec+0x71>
     8b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     8bc:	48 89 c7             	mov    %rax,%rdi
     8bf:	e8 fc fd ff ff       	callq  6c0 <free@plt>
     8c4:	b8 00 00 00 00       	mov    $0x0,%eax
     8c9:	eb 10                	jmp    8db <new_vec+0x81>
     8cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     8cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     8d3:	48 89 50 08          	mov    %rdx,0x8(%rax)
     8d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     8db:	c9                   	leaveq 
     8dc:	c3                   	retq   

00000000000008dd <get_vec_element>:
     8dd:	55                   	push   %rbp
     8de:	48 89 e5             	mov    %rsp,%rbp
     8e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     8e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
     8e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
     8ed:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
     8f2:	78 0d                	js     901 <get_vec_element+0x24>
     8f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     8f8:	48 8b 00             	mov    (%rax),%rax
     8fb:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
     8ff:	7c 07                	jl     908 <get_vec_element+0x2b>
     901:	b8 00 00 00 00       	mov    $0x0,%eax
     906:	eb 22                	jmp    92a <get_vec_element+0x4d>
     908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     90c:	48 8b 40 08          	mov    0x8(%rax),%rax
     910:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     914:	48 c1 e2 03          	shl    $0x3,%rdx
     918:	48 01 d0             	add    %rdx,%rax
     91b:	48 8b 10             	mov    (%rax),%rdx
     91e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     922:	48 89 10             	mov    %rdx,(%rax)
     925:	b8 01 00 00 00       	mov    $0x1,%eax
     92a:	5d                   	pop    %rbp
     92b:	c3                   	retq   

000000000000092c <vec_length>:
     92c:	55                   	push   %rbp
     92d:	48 89 e5             	mov    %rsp,%rbp
     930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     938:	48 8b 00             	mov    (%rax),%rax
     93b:	5d                   	pop    %rbp
     93c:	c3                   	retq   

000000000000093d <get_vec_start>:
     93d:	55                   	push   %rbp
     93e:	48 89 e5             	mov    %rsp,%rbp
     941:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     949:	48 8b 40 08          	mov    0x8(%rax),%rax
     94d:	5d                   	pop    %rbp
     94e:	c3                   	retq   

000000000000094f <combine1_add_in>:
     94f:	55                   	push   %rbp
     950:	48 89 e5             	mov    %rsp,%rbp
     953:	48 83 ec 30          	sub    $0x30,%rsp
     957:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     95b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     95f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     966:	00 00 
     968:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     96c:	31 c0                	xor    %eax,%eax
     96e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     972:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     979:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     980:	00 
     981:	eb 31                	jmp    9b4 <combine1_add_in+0x65>
     983:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
     987:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
     98b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     98f:	48 89 ce             	mov    %rcx,%rsi
     992:	48 89 c7             	mov    %rax,%rdi
     995:	e8 43 ff ff ff       	callq  8dd <get_vec_element>
     99a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     99e:	48 8b 10             	mov    (%rax),%rdx
     9a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     9a5:	48 01 c2             	add    %rax,%rdx
     9a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     9ac:	48 89 10             	mov    %rdx,(%rax)
     9af:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
     9b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     9b8:	48 89 c7             	mov    %rax,%rdi
     9bb:	e8 6c ff ff ff       	callq  92c <vec_length>
     9c0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
     9c4:	7c bd                	jl     983 <combine1_add_in+0x34>
     9c6:	90                   	nop
     9c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     9cb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     9d2:	00 00 
     9d4:	74 05                	je     9db <combine1_add_in+0x8c>
     9d6:	e8 15 fd ff ff       	callq  6f0 <__stack_chk_fail@plt>
     9db:	c9                   	leaveq 
     9dc:	c3                   	retq   

00000000000009dd <combine1_mul_in>:
     9dd:	55                   	push   %rbp
     9de:	48 89 e5             	mov    %rsp,%rbp
     9e1:	48 83 ec 30          	sub    $0x30,%rsp
     9e5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     9e9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     9ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     9f4:	00 00 
     9f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     9fa:	31 c0                	xor    %eax,%eax
     9fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     a00:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     a07:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     a0e:	00 
     a0f:	eb 32                	jmp    a43 <combine1_mul_in+0x66>
     a11:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
     a15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
     a19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     a1d:	48 89 ce             	mov    %rcx,%rsi
     a20:	48 89 c7             	mov    %rax,%rdi
     a23:	e8 b5 fe ff ff       	callq  8dd <get_vec_element>
     a28:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     a2c:	48 8b 10             	mov    (%rax),%rdx
     a2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     a33:	48 0f af d0          	imul   %rax,%rdx
     a37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     a3b:	48 89 10             	mov    %rdx,(%rax)
     a3e:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
     a43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     a47:	48 89 c7             	mov    %rax,%rdi
     a4a:	e8 dd fe ff ff       	callq  92c <vec_length>
     a4f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
     a53:	7c bc                	jl     a11 <combine1_mul_in+0x34>
     a55:	90                   	nop
     a56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     a5a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     a61:	00 00 
     a63:	74 05                	je     a6a <combine1_mul_in+0x8d>
     a65:	e8 86 fc ff ff       	callq  6f0 <__stack_chk_fail@plt>
     a6a:	c9                   	leaveq 
     a6b:	c3                   	retq   

0000000000000a6c <combine1_add>:
     a6c:	55                   	push   %rbp
     a6d:	48 89 e5             	mov    %rsp,%rbp
     a70:	48 83 ec 30          	sub    $0x30,%rsp
     a74:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     a78:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     a7c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     a83:	00 00 
     a85:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     a89:	31 c0                	xor    %eax,%eax
     a8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     a8f:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     a96:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     a9d:	00 
     a9e:	eb 31                	jmp    ad1 <combine1_add+0x65>
     aa0:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
     aa4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
     aa8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     aac:	48 89 ce             	mov    %rcx,%rsi
     aaf:	48 89 c7             	mov    %rax,%rdi
     ab2:	e8 26 fe ff ff       	callq  8dd <get_vec_element>
     ab7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     abb:	48 8b 10             	mov    (%rax),%rdx
     abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     ac2:	48 01 c2             	add    %rax,%rdx
     ac5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     ac9:	48 89 10             	mov    %rdx,(%rax)
     acc:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
     ad1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     ad5:	48 89 c7             	mov    %rax,%rdi
     ad8:	e8 4f fe ff ff       	callq  92c <vec_length>
     add:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
     ae1:	7c bd                	jl     aa0 <combine1_add+0x34>
     ae3:	90                   	nop
     ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     ae8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     aef:	00 00 
     af1:	74 05                	je     af8 <combine1_add+0x8c>
     af3:	e8 f8 fb ff ff       	callq  6f0 <__stack_chk_fail@plt>
     af8:	c9                   	leaveq 
     af9:	c3                   	retq   

0000000000000afa <combine1_mul>:
     afa:	55                   	push   %rbp
     afb:	48 89 e5             	mov    %rsp,%rbp
     afe:	48 83 ec 30          	sub    $0x30,%rsp
     b02:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     b06:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     b0a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     b11:	00 00 
     b13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     b17:	31 c0                	xor    %eax,%eax
     b19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     b1d:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     b24:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     b2b:	00 
     b2c:	eb 32                	jmp    b60 <combine1_mul+0x66>
     b2e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
     b32:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
     b36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     b3a:	48 89 ce             	mov    %rcx,%rsi
     b3d:	48 89 c7             	mov    %rax,%rdi
     b40:	e8 98 fd ff ff       	callq  8dd <get_vec_element>
     b45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     b49:	48 8b 10             	mov    (%rax),%rdx
     b4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     b50:	48 0f af d0          	imul   %rax,%rdx
     b54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     b58:	48 89 10             	mov    %rdx,(%rax)
     b5b:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
     b60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     b64:	48 89 c7             	mov    %rax,%rdi
     b67:	e8 c0 fd ff ff       	callq  92c <vec_length>
     b6c:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
     b70:	7c bc                	jl     b2e <combine1_mul+0x34>
     b72:	90                   	nop
     b73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     b77:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     b7e:	00 00 
     b80:	74 05                	je     b87 <combine1_mul+0x8d>
     b82:	e8 69 fb ff ff       	callq  6f0 <__stack_chk_fail@plt>
     b87:	c9                   	leaveq 
     b88:	c3                   	retq   

0000000000000b89 <combine2_add>:
     b89:	55                   	push   %rbp
     b8a:	48 89 e5             	mov    %rsp,%rbp
     b8d:	48 83 ec 30          	sub    $0x30,%rsp
     b91:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     b95:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     b99:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     ba0:	00 00 
     ba2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     ba6:	31 c0                	xor    %eax,%eax
     ba8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     bac:	48 89 c7             	mov    %rax,%rdi
     baf:	e8 78 fd ff ff       	callq  92c <vec_length>
     bb4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     bb8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     bbc:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     bc3:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
     bca:	00 
     bcb:	eb 31                	jmp    bfe <combine2_add+0x75>
     bcd:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
     bd1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
     bd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     bd9:	48 89 ce             	mov    %rcx,%rsi
     bdc:	48 89 c7             	mov    %rax,%rdi
     bdf:	e8 f9 fc ff ff       	callq  8dd <get_vec_element>
     be4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     be8:	48 8b 10             	mov    (%rax),%rdx
     beb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     bef:	48 01 c2             	add    %rax,%rdx
     bf2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     bf6:	48 89 10             	mov    %rdx,(%rax)
     bf9:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
     bfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     c02:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     c06:	7c c5                	jl     bcd <combine2_add+0x44>
     c08:	90                   	nop
     c09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     c0d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     c14:	00 00 
     c16:	74 05                	je     c1d <combine2_add+0x94>
     c18:	e8 d3 fa ff ff       	callq  6f0 <__stack_chk_fail@plt>
     c1d:	c9                   	leaveq 
     c1e:	c3                   	retq   

0000000000000c1f <combine2_mul>:
     c1f:	55                   	push   %rbp
     c20:	48 89 e5             	mov    %rsp,%rbp
     c23:	48 83 ec 30          	sub    $0x30,%rsp
     c27:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     c2b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     c2f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     c36:	00 00 
     c38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     c3c:	31 c0                	xor    %eax,%eax
     c3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c42:	48 89 c7             	mov    %rax,%rdi
     c45:	e8 e2 fc ff ff       	callq  92c <vec_length>
     c4a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     c4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     c52:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     c59:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
     c60:	00 
     c61:	eb 32                	jmp    c95 <combine2_mul+0x76>
     c63:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
     c67:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
     c6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c6f:	48 89 ce             	mov    %rcx,%rsi
     c72:	48 89 c7             	mov    %rax,%rdi
     c75:	e8 63 fc ff ff       	callq  8dd <get_vec_element>
     c7a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     c7e:	48 8b 10             	mov    (%rax),%rdx
     c81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     c85:	48 0f af d0          	imul   %rax,%rdx
     c89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     c8d:	48 89 10             	mov    %rdx,(%rax)
     c90:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
     c95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     c99:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     c9d:	7c c4                	jl     c63 <combine2_mul+0x44>
     c9f:	90                   	nop
     ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     ca4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     cab:	00 00 
     cad:	74 05                	je     cb4 <combine2_mul+0x95>
     caf:	e8 3c fa ff ff       	callq  6f0 <__stack_chk_fail@plt>
     cb4:	c9                   	leaveq 
     cb5:	c3                   	retq   

0000000000000cb6 <combine3_add>:
     cb6:	55                   	push   %rbp
     cb7:	48 89 e5             	mov    %rsp,%rbp
     cba:	48 83 ec 30          	sub    $0x30,%rsp
     cbe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     cc2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     cc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     cca:	48 89 c7             	mov    %rax,%rdi
     ccd:	e8 5a fc ff ff       	callq  92c <vec_length>
     cd2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     cd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     cda:	48 89 c7             	mov    %rax,%rdi
     cdd:	e8 5b fc ff ff       	callq  93d <get_vec_start>
     ce2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     ce6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     cea:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     cf1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
     cf8:	00 
     cf9:	eb 2c                	jmp    d27 <combine3_add+0x71>
     cfb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     cff:	48 8b 10             	mov    (%rax),%rdx
     d02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     d06:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
     d0d:	00 
     d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     d12:	48 01 c8             	add    %rcx,%rax
     d15:	48 8b 00             	mov    (%rax),%rax
     d18:	48 01 c2             	add    %rax,%rdx
     d1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     d1f:	48 89 10             	mov    %rdx,(%rax)
     d22:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
     d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     d2b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     d2f:	7c ca                	jl     cfb <combine3_add+0x45>
     d31:	90                   	nop
     d32:	c9                   	leaveq 
     d33:	c3                   	retq   

0000000000000d34 <combine3_mul>:
     d34:	55                   	push   %rbp
     d35:	48 89 e5             	mov    %rsp,%rbp
     d38:	48 83 ec 30          	sub    $0x30,%rsp
     d3c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     d40:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     d44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d48:	48 89 c7             	mov    %rax,%rdi
     d4b:	e8 dc fb ff ff       	callq  92c <vec_length>
     d50:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     d54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d58:	48 89 c7             	mov    %rax,%rdi
     d5b:	e8 dd fb ff ff       	callq  93d <get_vec_start>
     d60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     d64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     d68:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
     d6f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
     d76:	00 
     d77:	eb 2d                	jmp    da6 <combine3_mul+0x72>
     d79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     d7d:	48 8b 10             	mov    (%rax),%rdx
     d80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     d84:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
     d8b:	00 
     d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     d90:	48 01 c8             	add    %rcx,%rax
     d93:	48 8b 00             	mov    (%rax),%rax
     d96:	48 0f af d0          	imul   %rax,%rdx
     d9a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     d9e:	48 89 10             	mov    %rdx,(%rax)
     da1:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
     da6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     daa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     dae:	7c c9                	jl     d79 <combine3_mul+0x45>
     db0:	90                   	nop
     db1:	c9                   	leaveq 
     db2:	c3                   	retq   

0000000000000db3 <combine4_add>:
     db3:	55                   	push   %rbp
     db4:	48 89 e5             	mov    %rsp,%rbp
     db7:	48 83 ec 30          	sub    $0x30,%rsp
     dbb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     dbf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     dc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     dc7:	48 89 c7             	mov    %rax,%rdi
     dca:	e8 5d fb ff ff       	callq  92c <vec_length>
     dcf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     dd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     dd7:	48 89 c7             	mov    %rax,%rdi
     dda:	e8 5e fb ff ff       	callq  93d <get_vec_start>
     ddf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     de3:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
     dea:	00 
     deb:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
     df2:	00 
     df3:	eb 1f                	jmp    e14 <combine4_add+0x61>
     df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     df9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     e00:	00 
     e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     e05:	48 01 d0             	add    %rdx,%rax
     e08:	48 8b 00             	mov    (%rax),%rax
     e0b:	48 01 45 e8          	add    %rax,-0x18(%rbp)
     e0f:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
     e14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     e18:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     e1c:	7c d7                	jl     df5 <combine4_add+0x42>
     e1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     e22:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     e26:	48 89 10             	mov    %rdx,(%rax)
     e29:	90                   	nop
     e2a:	c9                   	leaveq 
     e2b:	c3                   	retq   

0000000000000e2c <combine4_mul>:
     e2c:	55                   	push   %rbp
     e2d:	48 89 e5             	mov    %rsp,%rbp
     e30:	48 83 ec 30          	sub    $0x30,%rsp
     e34:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     e38:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     e3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     e40:	48 89 c7             	mov    %rax,%rdi
     e43:	e8 e4 fa ff ff       	callq  92c <vec_length>
     e48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     e4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     e50:	48 89 c7             	mov    %rax,%rdi
     e53:	e8 e5 fa ff ff       	callq  93d <get_vec_start>
     e58:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     e5c:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
     e63:	00 
     e64:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
     e6b:	00 
     e6c:	eb 27                	jmp    e95 <combine4_mul+0x69>
     e6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     e72:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     e79:	00 
     e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     e7e:	48 01 d0             	add    %rdx,%rax
     e81:	48 8b 00             	mov    (%rax),%rax
     e84:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     e88:	48 0f af c2          	imul   %rdx,%rax
     e8c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     e90:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
     e95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     e99:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     e9d:	7c cf                	jl     e6e <combine4_mul+0x42>
     e9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     ea3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     ea7:	48 89 10             	mov    %rdx,(%rax)
     eaa:	90                   	nop
     eab:	c9                   	leaveq 
     eac:	c3                   	retq   

0000000000000ead <main>:
     ead:	55                   	push   %rbp
     eae:	48 89 e5             	mov    %rsp,%rbp
     eb1:	48 83 ec 40          	sub    $0x40,%rsp
     eb5:	89 7d cc             	mov    %edi,-0x34(%rbp)
     eb8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
     ebc:	83 7d cc 02          	cmpl   $0x2,-0x34(%rbp)
     ec0:	74 16                	je     ed8 <main+0x2b>
     ec2:	48 8d 3d ff 03 00 00 	lea    0x3ff(%rip),%rdi        # 12c8 <_IO_stdin_used+0x8>
     ec9:	e8 02 f8 ff ff       	callq  6d0 <puts@plt>
     ece:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     ed3:	e9 60 03 00 00       	jmpq   1238 <main+0x38b>
     ed8:	bf a0 86 01 00       	mov    $0x186a0,%edi
     edd:	e8 78 f9 ff ff       	callq  85a <new_vec>
     ee2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     ee6:	bf 08 00 00 00       	mov    $0x8,%edi
     eeb:	e8 30 f8 ff ff       	callq  720 <malloc@plt>
     ef0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     ef4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     ef8:	48 83 c0 08          	add    $0x8,%rax
     efc:	48 8b 00             	mov    (%rax),%rax
     eff:	48 89 c7             	mov    %rax,%rdi
     f02:	e8 29 f8 ff ff       	callq  730 <atoi@plt>
     f07:	89 45 dc             	mov    %eax,-0x24(%rbp)
     f0a:	83 7d dc 0a          	cmpl   $0xa,-0x24(%rbp)
     f0e:	0f 87 0c 03 00 00    	ja     1220 <main+0x373>
     f14:	8b 45 dc             	mov    -0x24(%rbp),%eax
     f17:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
     f1e:	00 
     f1f:	48 8d 05 0e 05 00 00 	lea    0x50e(%rip),%rax        # 1434 <_IO_stdin_used+0x174>
     f26:	8b 04 02             	mov    (%rdx,%rax,1),%eax
     f29:	48 63 d0             	movslq %eax,%rdx
     f2c:	48 8d 05 01 05 00 00 	lea    0x501(%rip),%rax        # 1434 <_IO_stdin_used+0x174>
     f33:	48 01 d0             	add    %rdx,%rax
     f36:	ff e0                	jmpq   *%rax
     f38:	e8 a3 f7 ff ff       	callq  6e0 <clock@plt>
     f3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     f41:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     f45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     f49:	48 89 d6             	mov    %rdx,%rsi
     f4c:	48 89 c7             	mov    %rax,%rdi
     f4f:	e8 18 fb ff ff       	callq  a6c <combine1_add>
     f54:	e8 87 f7 ff ff       	callq  6e0 <clock@plt>
     f59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     f61:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
     f65:	48 89 c2             	mov    %rax,%rdx
     f68:	be a0 86 01 00       	mov    $0x186a0,%esi
     f6d:	48 8d 3d 65 03 00 00 	lea    0x365(%rip),%rdi        # 12d9 <_IO_stdin_used+0x19>
     f74:	b8 00 00 00 00       	mov    $0x0,%eax
     f79:	e8 82 f7 ff ff       	callq  700 <printf@plt>
     f7e:	e9 b0 02 00 00       	jmpq   1233 <main+0x386>
     f83:	e8 58 f7 ff ff       	callq  6e0 <clock@plt>
     f88:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     f8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     f90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     f94:	48 89 d6             	mov    %rdx,%rsi
     f97:	48 89 c7             	mov    %rax,%rdi
     f9a:	e8 5b fb ff ff       	callq  afa <combine1_mul>
     f9f:	e8 3c f7 ff ff       	callq  6e0 <clock@plt>
     fa4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     fac:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
     fb0:	48 89 c2             	mov    %rax,%rdx
     fb3:	be a0 86 01 00       	mov    $0x186a0,%esi
     fb8:	48 8d 3d 38 03 00 00 	lea    0x338(%rip),%rdi        # 12f7 <_IO_stdin_used+0x37>
     fbf:	b8 00 00 00 00       	mov    $0x0,%eax
     fc4:	e8 37 f7 ff ff       	callq  700 <printf@plt>
     fc9:	e9 65 02 00 00       	jmpq   1233 <main+0x386>
     fce:	e8 0d f7 ff ff       	callq  6e0 <clock@plt>
     fd3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     fd7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     fdb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     fdf:	48 89 d6             	mov    %rdx,%rsi
     fe2:	48 89 c7             	mov    %rax,%rdi
     fe5:	e8 9f fb ff ff       	callq  b89 <combine2_add>
     fea:	e8 f1 f6 ff ff       	callq  6e0 <clock@plt>
     fef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     ff7:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
     ffb:	48 89 c2             	mov    %rax,%rdx
     ffe:	be a0 86 01 00       	mov    $0x186a0,%esi
    1003:	48 8d 3d 0b 03 00 00 	lea    0x30b(%rip),%rdi        # 1315 <_IO_stdin_used+0x55>
    100a:	b8 00 00 00 00       	mov    $0x0,%eax
    100f:	e8 ec f6 ff ff       	callq  700 <printf@plt>
    1014:	e9 1a 02 00 00       	jmpq   1233 <main+0x386>
    1019:	e8 c2 f6 ff ff       	callq  6e0 <clock@plt>
    101e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1022:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1026:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    102a:	48 89 d6             	mov    %rdx,%rsi
    102d:	48 89 c7             	mov    %rax,%rdi
    1030:	e8 ea fb ff ff       	callq  c1f <combine2_mul>
    1035:	e8 a6 f6 ff ff       	callq  6e0 <clock@plt>
    103a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    103e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1042:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    1046:	48 89 c2             	mov    %rax,%rdx
    1049:	be a0 86 01 00       	mov    $0x186a0,%esi
    104e:	48 8d 3d de 02 00 00 	lea    0x2de(%rip),%rdi        # 1333 <_IO_stdin_used+0x73>
    1055:	b8 00 00 00 00       	mov    $0x0,%eax
    105a:	e8 a1 f6 ff ff       	callq  700 <printf@plt>
    105f:	e9 cf 01 00 00       	jmpq   1233 <main+0x386>
    1064:	e8 77 f6 ff ff       	callq  6e0 <clock@plt>
    1069:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    106d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1071:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1075:	48 89 d6             	mov    %rdx,%rsi
    1078:	48 89 c7             	mov    %rax,%rdi
    107b:	e8 36 fc ff ff       	callq  cb6 <combine3_add>
    1080:	e8 5b f6 ff ff       	callq  6e0 <clock@plt>
    1085:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    108d:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    1091:	48 89 c2             	mov    %rax,%rdx
    1094:	be a0 86 01 00       	mov    $0x186a0,%esi
    1099:	48 8d 3d b1 02 00 00 	lea    0x2b1(%rip),%rdi        # 1351 <_IO_stdin_used+0x91>
    10a0:	b8 00 00 00 00       	mov    $0x0,%eax
    10a5:	e8 56 f6 ff ff       	callq  700 <printf@plt>
    10aa:	e9 84 01 00 00       	jmpq   1233 <main+0x386>
    10af:	e8 2c f6 ff ff       	callq  6e0 <clock@plt>
    10b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    10b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    10bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    10c0:	48 89 d6             	mov    %rdx,%rsi
    10c3:	48 89 c7             	mov    %rax,%rdi
    10c6:	e8 69 fc ff ff       	callq  d34 <combine3_mul>
    10cb:	e8 10 f6 ff ff       	callq  6e0 <clock@plt>
    10d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    10d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10d8:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    10dc:	48 89 c2             	mov    %rax,%rdx
    10df:	be a0 86 01 00       	mov    $0x186a0,%esi
    10e4:	48 8d 3d 84 02 00 00 	lea    0x284(%rip),%rdi        # 136f <_IO_stdin_used+0xaf>
    10eb:	b8 00 00 00 00       	mov    $0x0,%eax
    10f0:	e8 0b f6 ff ff       	callq  700 <printf@plt>
    10f5:	e9 39 01 00 00       	jmpq   1233 <main+0x386>
    10fa:	e8 e1 f5 ff ff       	callq  6e0 <clock@plt>
    10ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1103:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1107:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    110b:	48 89 d6             	mov    %rdx,%rsi
    110e:	48 89 c7             	mov    %rax,%rdi
    1111:	e8 9d fc ff ff       	callq  db3 <combine4_add>
    1116:	e8 c5 f5 ff ff       	callq  6e0 <clock@plt>
    111b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    111f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1123:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    1127:	48 89 c2             	mov    %rax,%rdx
    112a:	be a0 86 01 00       	mov    $0x186a0,%esi
    112f:	48 8d 3d 57 02 00 00 	lea    0x257(%rip),%rdi        # 138d <_IO_stdin_used+0xcd>
    1136:	b8 00 00 00 00       	mov    $0x0,%eax
    113b:	e8 c0 f5 ff ff       	callq  700 <printf@plt>
    1140:	e9 ee 00 00 00       	jmpq   1233 <main+0x386>
    1145:	e8 96 f5 ff ff       	callq  6e0 <clock@plt>
    114a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    114e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1152:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1156:	48 89 d6             	mov    %rdx,%rsi
    1159:	48 89 c7             	mov    %rax,%rdi
    115c:	e8 cb fc ff ff       	callq  e2c <combine4_mul>
    1161:	e8 7a f5 ff ff       	callq  6e0 <clock@plt>
    1166:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    116a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    116e:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    1172:	48 89 c2             	mov    %rax,%rdx
    1175:	be a0 86 01 00       	mov    $0x186a0,%esi
    117a:	48 8d 3d 2a 02 00 00 	lea    0x22a(%rip),%rdi        # 13ab <_IO_stdin_used+0xeb>
    1181:	b8 00 00 00 00       	mov    $0x0,%eax
    1186:	e8 75 f5 ff ff       	callq  700 <printf@plt>
    118b:	e9 a3 00 00 00       	jmpq   1233 <main+0x386>
    1190:	e8 4b f5 ff ff       	callq  6e0 <clock@plt>
    1195:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1199:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    119d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11a1:	48 89 d6             	mov    %rdx,%rsi
    11a4:	48 89 c7             	mov    %rax,%rdi
    11a7:	e8 a3 f7 ff ff       	callq  94f <combine1_add_in>
    11ac:	e8 2f f5 ff ff       	callq  6e0 <clock@plt>
    11b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11b9:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    11bd:	48 89 c2             	mov    %rax,%rdx
    11c0:	be a0 86 01 00       	mov    $0x186a0,%esi
    11c5:	48 8d 3d 04 02 00 00 	lea    0x204(%rip),%rdi        # 13d0 <_IO_stdin_used+0x110>
    11cc:	b8 00 00 00 00       	mov    $0x0,%eax
    11d1:	e8 2a f5 ff ff       	callq  700 <printf@plt>
    11d6:	eb 5b                	jmp    1233 <main+0x386>
    11d8:	e8 03 f5 ff ff       	callq  6e0 <clock@plt>
    11dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    11e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    11e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11e9:	48 89 d6             	mov    %rdx,%rsi
    11ec:	48 89 c7             	mov    %rax,%rdi
    11ef:	e8 e9 f7 ff ff       	callq  9dd <combine1_mul_in>
    11f4:	e8 e7 f4 ff ff       	callq  6e0 <clock@plt>
    11f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1201:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    1205:	48 89 c2             	mov    %rax,%rdx
    1208:	be a0 86 01 00       	mov    $0x186a0,%esi
    120d:	48 8d 3d e4 01 00 00 	lea    0x1e4(%rip),%rdi        # 13f8 <_IO_stdin_used+0x138>
    1214:	b8 00 00 00 00       	mov    $0x0,%eax
    1219:	e8 e2 f4 ff ff       	callq  700 <printf@plt>
    121e:	eb 13                	jmp    1233 <main+0x386>
    1220:	48 8d 3d f2 01 00 00 	lea    0x1f2(%rip),%rdi        # 1419 <_IO_stdin_used+0x159>
    1227:	e8 a4 f4 ff ff       	callq  6d0 <puts@plt>
    122c:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1231:	eb 05                	jmp    1238 <main+0x38b>
    1233:	b8 00 00 00 00       	mov    $0x0,%eax
    1238:	c9                   	leaveq 
    1239:	c3                   	retq   
    123a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001240 <__libc_csu_init>:
    1240:	41 57                	push   %r15
    1242:	41 56                	push   %r14
    1244:	49 89 d7             	mov    %rdx,%r15
    1247:	41 55                	push   %r13
    1249:	41 54                	push   %r12
    124b:	4c 8d 25 2e 0b 20 00 	lea    0x200b2e(%rip),%r12        # 201d80 <__frame_dummy_init_array_entry>
    1252:	55                   	push   %rbp
    1253:	48 8d 2d 2e 0b 20 00 	lea    0x200b2e(%rip),%rbp        # 201d88 <__init_array_end>
    125a:	53                   	push   %rbx
    125b:	41 89 fd             	mov    %edi,%r13d
    125e:	49 89 f6             	mov    %rsi,%r14
    1261:	4c 29 e5             	sub    %r12,%rbp
    1264:	48 83 ec 08          	sub    $0x8,%rsp
    1268:	48 c1 fd 03          	sar    $0x3,%rbp
    126c:	e8 27 f4 ff ff       	callq  698 <_init>
    1271:	48 85 ed             	test   %rbp,%rbp
    1274:	74 20                	je     1296 <__libc_csu_init+0x56>
    1276:	31 db                	xor    %ebx,%ebx
    1278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    127f:	00 
    1280:	4c 89 fa             	mov    %r15,%rdx
    1283:	4c 89 f6             	mov    %r14,%rsi
    1286:	44 89 ef             	mov    %r13d,%edi
    1289:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    128d:	48 83 c3 01          	add    $0x1,%rbx
    1291:	48 39 dd             	cmp    %rbx,%rbp
    1294:	75 ea                	jne    1280 <__libc_csu_init+0x40>
    1296:	48 83 c4 08          	add    $0x8,%rsp
    129a:	5b                   	pop    %rbx
    129b:	5d                   	pop    %rbp
    129c:	41 5c                	pop    %r12
    129e:	41 5d                	pop    %r13
    12a0:	41 5e                	pop    %r14
    12a2:	41 5f                	pop    %r15
    12a4:	c3                   	retq   
    12a5:	90                   	nop
    12a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    12ad:	00 00 00 

00000000000012b0 <__libc_csu_fini>:
    12b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000000012b4 <_fini>:
    12b4:	48 83 ec 08          	sub    $0x8,%rsp
    12b8:	48 83 c4 08          	add    $0x8,%rsp
    12bc:	c3                   	retq   
